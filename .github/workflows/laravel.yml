name: CI & Deploy Laravel

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  laravel-ci:
    name: ðŸ§ª Build
    runs-on: ubuntu-latest
    steps:
      # 1. Checkout code
      - uses: actions/checkout@v3

      # 2. Setup PHP vÃ  cache Composer
      - name: Setup PHP & Composer Cache
        uses: shivammathur/setup-php@v2
        with:
          php-version: "8.3"
          tools: composer
      - name: Cache Composer deps
        uses: actions/cache@v3
        with:
          path: ~/.composer/cache
          key: composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: composer-

      # 3. Install Composer dependencies
      - name: Install PHP dependencies
        run: composer install --no-interaction --prefer-dist

      # 4. Copy env & generate key
      - name: Prepare .env & Key
        run: |
          cp .env.example .env
          php artisan key:generate --ansi

      # 5. Run PHPCS + auto-fix
      - name: Cache & Run PHPCS
        uses: actions/cache@v3
        with:
          path: vendor/bin/phpcs.phar
          key: phpcs-${{ hashFiles('**/composer.json') }}
          restore-keys: phpcs-
      - name: Lint & Auto-fix with PHPCS
        run: |
          if [ ! -f phpcs.phar ]; then
            curl -sSL https://squizlabs.github.io/PHP_CodeSniffer/phpcs.phar -o phpcs.phar
            chmod +x phpcs.phar
          fi
          ./phpcs.phar --standard=PSR12 --extensions=php -n app/
          ./phpcs.phar --standard=PSR12 --extensions=php -n app/ --no-colors --report=summary

  deploy:
    name: ðŸš€ Deploy to EC2
    needs: laravel-ci
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
      - uses: actions/checkout@v4

      # 1. SSH setup
      - name: Setup SSH Key
        uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: ${{ secrets.EC2_SSH_KEY }}

      # 2. Sync code (ngoaÌ£i trÆ°Ì€ vendor, .env)
      - name: Rsync to EC2
        run: |
          rsync -az --delete \
            --omit-dir-times --no-perms --no-owner --no-group \
            -e "ssh -o StrictHostKeyChecking=no -p ${EC2_SSH_PORT:-22}" \
            --exclude '.git*' --exclude 'vendor/' --exclude '.env' \
            ./ ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:~/temp-deploy/
          ssh -o StrictHostKeyChecking=no -p ${EC2_SSH_PORT:-22} \
            ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} \
            "sudo rsync -a --delete ~/temp-deploy/ /var/www/job-seek/"

      # 3. Cháº¡y lá»‡nh deploy trÃªn host
      - name: Execute remote deploy
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          port: ${{ secrets.EC2_SSH_PORT || 22 }}
          script: |
            cd /var/www/job-seek

            composer install --no-dev --optimize-autoloader

            # Apply migrations & cache
            php artisan migrate --force
            php artisan config:cache
            php artisan route:cache
